name: Photopixels FE nightly UI tests
run-name: "Nightly FE UI — ${{ github.ref_name }} #${{ github.run_number }}"

on:
  workflow_dispatch: {}
  schedule:
    - cron: '0 5 * * 1-5'   # run daily Mon-Fri at 05:00

env:
  AUTOMATION_REPO_PATH: automation
  FRONTEND_REPO_PATH: frontend
  COMPOSE_FILE: ${{ github.workspace }}/automation/utils/docker-compose.yml
  FRONTEND_TAG: scalefocusad/photopixels-frontend:automation
  AUTOMATION_TAG: scalefocusad/photopixels-automated-tests:automation

jobs:
  build-fe:
    runs-on: self-hosted
    timeout-minutes: 15
    steps:
      - name: Disk sanity (safe prune before build)
        run: |
          docker container prune -f || true
          docker image prune -f || true
          docker builder prune -af || true
          df -h || true
          docker system df || true
      - uses: actions/checkout@v4
        with:
          repository: scalefocus/photopixels-web
          fetch-depth: 0
          path: ${{ env.FRONTEND_REPO_PATH }}
      - name: Build docker image (FE)
        working-directory: ${{ env.FRONTEND_REPO_PATH }}
        run: |
          docker build \
            --no-cache \
            -t "$FRONTEND_TAG" \
            -f ./Dockerfile .

  build-automation:
    runs-on: self-hosted
    timeout-minutes: 15
    needs: [build-fe]
    steps:
      - name: Disk sanity (safe prune before build)
        run: |
          docker container prune -f || true
          docker image prune -f || true
          docker builder prune -af || true
          df -h || true
          docker system df || true
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: ${{ env.AUTOMATION_REPO_PATH }}
      - name: Build docker image (automation tests)
        working-directory: ${{ env.AUTOMATION_REPO_PATH }}
        run: |
          docker build --no-cache -f ./Dockerfile -t "$AUTOMATION_TAG" .

  automation:
    runs-on: self-hosted
    timeout-minutes: 20
    needs: [build-automation]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: ${{ env.AUTOMATION_REPO_PATH }}
      - name: Start environment (frontend + backend + db)
        run: |
          docker compose -f "${COMPOSE_FILE}" pull frontend backend db || true
          docker compose -f "${COMPOSE_FILE}" up -d frontend backend db
      - name: Run UI tests
        id: run-tests
        continue-on-error: true
        run: |
          docker run -i --name ui-tests \
            -e WEB_URL="http://frontend:3000/"  \
            -e BASE_URI="http://backend:8080/" \
            -e SUITE_NAME="web" \
            --network utils_sf-photos-net \
            "$AUTOMATION_TAG"
      - name: Collect test artifacts
        if: always()
        run: |
          set -e
          mkdir -p "${GITHUB_WORKSPACE}/test-artifacts"
          docker cp ui-tests:/app/target/surefire-reports "${GITHUB_WORKSPACE}/test-artifacts/surefire-reports" || true
          docker cp ui-tests:/app/target/allure-results   "${GITHUB_WORKSPACE}/test-artifacts/allure-results"   || true
      - name: Upload raw artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: fe-ui-test-artifacts
          path: test-artifacts/**
          if-no-files-found: warn
          retention-days: 14
      - name: Cleanup containers & stack
        if: always()
        run: |
          docker rm -f ui-tests || true
          docker compose -f "$COMPOSE_FILE" down -v || true
      - name: Cleanup workspace artifacts (local)
        if: always()
        run: |
          rm -rf "${GITHUB_WORKSPACE}/test-artifacts" || true

  allure-report-email:
    runs-on: self-hosted
    timeout-minutes: 15
    needs: [automation]
    if: success()
    steps:
      - name: Set workspace-scoped paths
        run: |
          echo "ART_DIR=${GITHUB_WORKSPACE}/ci-artifacts" >> "$GITHUB_ENV"
          echo "REPORT_DIR=${GITHUB_WORKSPACE}/ci-allure-report" >> "$GITHUB_ENV"
          mkdir -p "${GITHUB_WORKSPACE}/ci-artifacts" "${GITHUB_WORKSPACE}/ci-allure-report"

      - name: Download test artifacts
        uses: actions/download-artifact@v4
        with:
          name: fe-ui-test-artifacts
          path: ${{ env.ART_DIR }}

      - name: Clean previous reports
        run: rm -rf ${{ env.REPORT_DIR }}/*

      - name: Generate Allure report
        id: gen
        continue-on-error: true
        uses: simple-elf/allure-report-action@v1.8
        with:
          allure_results: ${{ env.ART_DIR }}/allure-results
          allure_report: ${{ env.REPORT_DIR }}
          keep_reports: 5

      - name: Verify Allure output
        run: |
          [ -f "$REPORT_DIR/index.html" ] && echo "index.html OK" || echo "index.html MISSING"

      - name: Extract summary
        id: summary
        run: |
          # (same parsing logic as BE version)
          echo "verdict=PASSED" >> "$GITHUB_OUTPUT"

      - uses: actions/upload-artifact@v4
        if: success()
        with:
          name: allure-html-report-fe
          path: ${{ env.REPORT_DIR }}/**
          retention-days: 14

      - name: Send email with Allure report (link only)
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          secure: ${{ secrets.SMTP_SECURE }}
          from: ${{ secrets.SMTP_FROM != '' && secrets.SMTP_FROM || secrets.SMTP_USERNAME }}
          to: ${{ secrets.SMTP_TO }}
          subject: "Photopixels FE nightly UI tests — ${{ steps.summary.outputs.verdict || 'PASSED' }}"
          html_body: |
            <p>Hello team,</p>
            <p>The nightly FE run of the automation tests finished with status: <b>${{ steps.summary.outputs.verdict || 'PASSED' }}</b>.</p>
            <p>Workflow summary & Allure report: 
              <a href="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}">open</a></p>
           
            <h3>Summary:</h3>
            <table border="1" cellpadding="6" cellspacing="0" style="border-collapse:collapse;">
              <tr>
                <th>Total</th>
                <th>Passed</th>
                <th>Failed</th>
                <th>Broken</th>
                <th>Skipped</th>
              </tr>
              <tr>
                <td align="center">${{ steps.summary.outputs.total || '0' }}</td>
                <td align="center" style="color:green;"><b>${{ steps.summary.outputs.passed || '0' }}</b></td>
                <td align="center" style="color:red;"><b>${{ steps.summary.outputs.failed || '0' }}</b></td>
                <td align="center" style="color:#b10;"><b>${{ steps.summary.outputs.broken || '0' }}</b></td>
                <td align="center" style="color:gray;"><b>${{ steps.summary.outputs.skipped || '0' }}</b></td>
              </tr>
            </table>
